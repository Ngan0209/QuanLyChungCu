# Generated by Django 5.1.7 on 2025-05-11 09:40

import cloudinary.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('area', models.FloatField()),
                ('total_apartment', models.FloatField()),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FeeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('question', models.TextField()),
                ('options', models.JSONField(help_text="List các lựa chọn, ví dụ: ['Tốt', 'Trung bình', 'Kém']")),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', cloudinary.models.CloudinaryField(max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('number', models.CharField(max_length=10)),
                ('floor', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('price', models.FloatField()),
                ('description', models.TextField()),
                ('area', models.DecimalField(decimal_places=2, max_digits=6)),
                ('active', models.BooleanField(default=True)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='apartments', to='chungcu.building')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('due_date', models.DateField()),
                ('paid', models.BooleanField(default=False)),
                ('apartment', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='chungcu.apartment')),
                ('fee_type', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='chungcu.feetype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Resident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('identity_card', models.CharField(max_length=12, unique=True)),
                ('gender', models.CharField(choices=[('Male', 'Nam'), ('Female', 'Nữ')], default=0, max_length=6)),
                ('birthday', models.DateField()),
                ('phone', models.CharField(max_length=10)),
                ('relationship_to_head', models.CharField(choices=[('owner', 'Chủ hộ'), ('wife/husband', 'Vợ/Chồng'), ('child', 'Con cái'), ('parent', 'Cha/Mẹ'), ('other', 'Khác')], default=1, max_length=12)),
                ('active', models.BooleanField(default=True)),
                ('apartment', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='residents', to='chungcu.apartment')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('method', models.CharField(choices=[('momo', 'Momo'), ('vnpay', 'VNPay')], max_length=20)),
                ('proof_image', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('pending', 'Chờ xác nhận'), ('approved', 'Đã duyệt'), ('rejected', 'Từ chối')], default='pending', max_length=20)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chungcu.invoice')),
                ('resident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chungcu.resident')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LockerItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('locker_number', models.CharField(default=1, max_length=10, unique=True)),
                ('destination', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('waiting', 'Chờ nhận'), ('received', 'Đã nhận')], default='waiting', max_length=50)),
                ('received_at', models.DateTimeField(blank=True, null=True)),
                ('resident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chungcu.resident')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='invoice',
            name='resident',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='chungcu.resident'),
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Chờ xử lý'), ('resolved', 'Đã xử lý')], default='pending', max_length=20)),
                ('response', models.TextField(blank=True, null=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chungcu.resident')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='apartment',
            name='household_head',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='household_head', to='chungcu.resident'),
        ),
        migrations.CreateModel(
            name='SurveyResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('answer', models.TextField()),
                ('resident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chungcu.resident')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chungcu.survey')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('full_name', models.CharField(max_length=100)),
                ('identity_card', models.CharField(max_length=12, unique=True)),
                ('relationship_to_resident', models.CharField(max_length=50)),
                ('active', models.BooleanField(default=True)),
                ('resident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chungcu.resident')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ParkingCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('card_number', models.CharField(max_length=10, unique=True)),
                ('license_plate', models.CharField(max_length=20)),
                ('vehicle_type', models.CharField(choices=[('car', 'Ô tô'), ('motorbike', 'Xe máy'), ('bike', 'Xe đạp'), ('Other', 'Khác')], max_length=20)),
                ('resident', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='chungcu.resident')),
                ('visitor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='chungcu.visitor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='apartment',
            unique_together={('number', 'building')},
        ),
    ]
